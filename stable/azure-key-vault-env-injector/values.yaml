# Default values 

replicaCount: 2

image:
  repository: spvest/azure-keyvault-webhook
  tag: 1.1.0-beta.47
  pullPolicy: IfNotPresent

envImage:
  repository: spvest/azure-keyvault-env
  tag: 1.1.0-beta.45

runningInsideAzureAks: true

cloudConfigHostPath: /etc/kubernetes/azure.json

keyVault:
  # Set to true to use custom auth - see https://akv2k8s.io/security/authentication/
  customAuth:
    enabled: false

dockerImageInspection:
  timeout: 20 # Timeout in seconds
  useAksCredentialsWithACS: true # Only applicable if runningInsideAzureAks is also true

authService:
  enabled: true
  caBundleController:
    image:
      repository: spvest/ca-bundle-controller
      tag: 1.1.0-beta.49
      pullPolicy: IfNotPresent
    podLabels: {}
    logLevel: Info
    logFormat: fmt # fmt or json
    akvLabelName: azure-key-vault-env-injection
    configMapName: akv2k8s-ca

service:
  name: azure-keyvault-secrets-webhook
  type: ClusterIP
  externalTlsPort: 443
  internalTlsPort: 443
  externalHttpPort: 80
  internalHttpPort: 80

metrics:
  enabled: false

webhook:
  logLevel: Info
  logFormat: fmt # fmt or json

  podLabels: {}
  dockerImageInspectionTimeout: 20 # will timeout after 20 seconds 

  certificate:
    generate: true
    useCertManager: false
    server:
      tls:
        crt:
        key:
    ca:
      crt:

  # What will happen if the webhook fails? Ignore (continue) or Fail (prevent Pod from starting)?
  failurePolicy: Fail

  # https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-namespaceselector
  namespaceSelector:
    matchLabels:
      azure-key-vault-env-injection: enabled # The webhook will only trigger i namespaces with this label

    # Prevent env injection for pods in kube-system as recomended: https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#avoiding-operating-on-the-kube-system-namespace
    matchExpressions:
    - key: name
      operator: NotIn
      values:
      - kube-system

## See `kubectl explain poddisruptionbudget.spec` for more
## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
podDisruptionBudget:
  enabled: true
  minAvailable: 1
#  maxUnavailable: 1

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}