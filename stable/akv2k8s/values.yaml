# Default values 

rbac:
  # Specifies whether RBAC resources should be created
  create: true
  podSecurityPolicies:
    {}

crds:
  enabled: true
  create: true
  keep: true

mangedIdentities:
  enabled: false
  crd:
    enabled: true
    create: true
    keep: true
  mic:
    name: mic
    repository: mcr.microsoft.com/oss/azure/aad-pod-identity/mic
    tag: v1.6.3
    pullPolicy: IfNotPresent

    priorityClassName: ""
    forceNamespaced: "false"
  
    # log level. Uses V logs (glog)
    logVerbosity: 0

    resources:
      limits:
        cpu: 200m
        memory: 1024Mi
      requests:
        cpu: 100m
        memory: 256Mi

    imagePullSecrets: {}

    serviceAccount:
      create: true
      ## The name of the ServiceAccount to use.
      ## If not set and create is true, a name is generated using the fullname template
      name:

    podAnnotations: {}

    ## Node labels for pod assignment
    ## aad-pod-identity is currently only supported on linux
    nodeSelector:
      kubernetes.io/os: linux

    tolerations: []

    affinity: {}

    leaderElection:
      # Override leader election instance name (default is 'hostname')
      instance: ""
      # Override the namespace to create leader election objects (default is default namespace)
      namespace: ""
      # Override leader election name (default is aad-pod-identity-mic)
      name: ""
      # Override leader election duration (default is 15s)
      duration: ""

    # Override http liveliness probe port (default is 8080)
    probePort: ""

    # Override interval in seconds at which sync loop should periodically check for errors and reconcile (default is 3600s)
    syncRetryDuration: ""

    # Override the defult value of immutable identities.
    immutableUserMSIs: []
      # Example of MSIs (should be replaced with the real client ids)
      #- "00000000-0000-0000-0000-000000000000"
      #- "11111111-1111-1111-1111-111111111111"

    # https://github.com/Azure/aad-pod-identity/blob/master/docs/readmes/README.featureflags.md#batch-create-delete-flag
    # default value is 20
    createDeleteBatch: ""

    # https://github.com/Azure/aad-pod-identity/blob/master/docs/readmes/README.featureflags.md#client-qps-flag
    # default value is 5
    clientQps: ""

    # default value is 8888
    # prometheus port for metrics
    prometheusPort: ""

    # The maximum retry of UpdateUserMSI call. MIC updates all the identities in a batch. If a single identity contains an error
    # or is invalid, then the entire operation fails. Configuring this flag will make MIC retry by removing the erroneous identities
    # returned in the error
    # Default value is 2.
    updateUserMSIMaxRetry: ""

    # The duration to wait before retrying UpdateUserMSI (batch assigning/un-assigning identity from VM/VMSS) in case of errors
    # Default value is 1s
    updateUserMSIRetryInterval: ""

    # The interval between reconciling identity assignment on Azure based on an existing list of AzureAssignedIdentities
    # Default value is 3m
    identityAssignmentReconcileInterval: ""


runningInsideAzureAks: true
addAzurePodIdentityException: false
cloudConfig: /etc/kubernetes/azure.json

controller:
  enabled: true
  name: controller
  image:
    repository: spvest/azure-keyvault-controller
    tag: 1.2.0-beta.1
    pullPolicy: IfNotPresent
    #pullSecret: secretName

  keyVault:
    # Set to true to use custom auth - see https://akv2k8s.io/security/authentication/#custom-authentication-for-the-controller
    customAuth:
      enabled: false

    polling:
      normalInterval: 1m
      failureInterval: 10m
      failureAttempts: 5

  logLevel: info
  logFormat: fmt # fmt or json

  caBundle:
    akvLabelName: azure-key-vault-env-injection
    configMapName: akv2k8s-ca

  # Uncomment to use client-id / secret - see https://akv2k8s.io/security/authentication/#custom-authentication-options
  # env:
  #   AZURE_TENANT_ID: <tenantId>
  #   AZURE_CLIENT_ID: <clientId>
  #   AZURE_CLIENT_SECRET: <clientSecret>
  
  serviceAccount:
    create: true
    ## The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the fullname template
    name:

  env: {}
  labels: {}
  podLabels: {}

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

env_injector:
  enabled: true
  name: env-injector

  replicaCount: 2

  image:
    repository: spvest/azure-keyvault-webhook
    tag: 1.1.8
    pullPolicy: IfNotPresent

  envImage:
    repository: spvest/azure-keyvault-env
    tag: 1.1.0

  keyVault:
    # Set to true to use custom auth - see https://github.com/SparebankenVest/azure-key-vault-to-kubernetes/blob/master/README.md#authentication
    customAuth: 
      enabled: false
      useAuthService: true # set to false to use Azure Key Vault credentials from own pod

  dockerImageInspection:
    timeout: 20 # Timeout in seconds
    useAksCredentialsWithACS: true # Only applicable if runningInsideAzureAks is also true

  service:
    name: azure-keyvault-secrets-webhook
    type: ClusterIP
    externalTlsPort: 443
    internalTlsPort: 443
    externalHttpPort: 80
    internalHttpPort: 80

  metrics:
    enabled: false
    port: 8443
    serviceMonitor:
      enabled: false
      scheme: https
      tlsConfig:
        insecureSkipVerify: true
      additionalLabels: {}

  webhook:
    logLevel: Info
    logFormat: fmt # ftm or json

    securityContext:
      allowPrivilegeEscalation: true # must be true if using aks identity
    #   runAsUser: 65534

    env: {}
    labels: {}
    podLabels: {}

    certificate:
      useCertManager: false
      custom:
        enabled: false
        server:
          tls:
            crt:
            key:
        ca:
          crt:

    ## See `kubectl explain poddisruptionbudget.spec` for more
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    #  maxUnavailable: 1

    # What will happen if the webhook fails? Ignore (continue) or Fail (prevent Pod from starting)?
    failurePolicy: Fail

    # https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#matching-requests-namespaceselector
    namespaceSelector:
      matchLabels:
        azure-key-vault-env-injection: enabled # The webhook will only trigger i namespaces with this label

      # Prevent env injection for pods in kube-system as recomended: https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/#avoiding-operating-on-the-kube-system-namespace
      matchExpressions:
      - key: name
        operator: NotIn
        values:
        - kube-system

  serviceAccount:
    create: true
    ## The name of the ServiceAccount to use.
    ## If not set and create is true, a name is generated using the fullname template
    name:

  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}