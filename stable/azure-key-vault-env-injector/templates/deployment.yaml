{{- $dot := . }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "azure-key-vault-to-kubernetes.fullname" . }}
  labels:
    app: {{ template "azure-key-vault-to-kubernetes.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    component: webhook
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "azure-key-vault-to-kubernetes.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "azure-key-vault-to-kubernetes.name" . }}
        release: {{ .Release.Name }}
        {{- if .Values.keyVault.customAuth.enabled }}
          {{- if .Values.keyVault.customAuth.podIdentitySelector }}
        aadpodidbinding: {{ .Values.keyVault.customAuth.podIdentitySelector }}
          {{- end}}
        {{- end}}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/apiservice.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ template "azure-key-vault-to-kubernetes.fullname" . }}
      containers:
        {{- if .Values.authService.enabled }}
        - name: ca-bundle-controller
          image: "{{ .Values.authService.caBundleController.image.repository }}:{{ .Values.authService.caBundleController.image.tag }}"
          env:
          - name: AKV_LABEL_NAME
            value: {{ .Values.authService.caBundleController.akvLabelName }}
          - name: AKV_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: AKV_SECRET_NAME
            value: {{ template "azure-key-vault-to-kubernetes.fullname" . }}
          - name: CA_CONFIG_MAP_NAME
            value: {{ .Values.authService.caBundleController.configMapName }}
          - name: LOG_LEVEL
            value: {{ .Values.authService.caBundleController.logLevel | quote }}
          imagePullPolicy: {{ .Values.authService.caBundleController.image.pullPolicy }}
        {{- end }}

        - name: webhook
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
          - name: PORT
            value: {{ .Values.service.internalTlsPort | quote }}
          - name: TLS_CERT_FILE
            value: /var/serving-cert/servingCert
          - name: TLS_PRIVATE_KEY_FILE
            value: /var/serving-cert/servingKey
          - name: TLS_CA_FILE
            value: /var/serving-cert/caCert
          - name: USE_AUTH_SERVICE
            value: {{ .Values.authService.enabled | quote }}
          {{- if .Values.authService.enabled }}
          - name: WEBHOOK_AUTH_SERVICE
            value: {{ template "azure-key-vault-to-kubernetes.fullname" . }}
          - name: WEBHOOK_AUTH_SERVICE_PORT
            value: {{ .Values.service.externalTlsPort | quote }}
          - name: CA_CONFIG_MAP_NAME
            value: {{ .Values.caBundleController.configMapName }}
          {{- end }}
          - name: CUSTOM_AUTH
            value: {{ .Values.keyVault.customAuth.enabled | quote }}
          - name: AZUREKEYVAULT_ENV_IMAGE
            value: {{ .Values.envImage.repository }}:{{ .Values.envImage.tag }}
          - name: CLOUD_CONFIG_HOST_PATH
            value: {{ .Values.cloudConfigHostPath }}
          - name: DOCKER_IMAGE_INSPECTION_TIMEOUT
            value: {{ .Values.webhook.dockerImageInspectionTimeout | quote }}
          - name: LOG_LEVEL
            value: {{ .Values.webhook.logLevel | quote }}
          - name: METRICS_ENABLED
            value: {{ .Values.metrics.enabled | quote }}
          {{- range $key, $value := .Values.env }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ template "azure-key-vault-to-kubernetes.fullname" $dot }}-env
                key: {{ $key }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
          - name: webhook
            containerPort: {{ .Values.service.internalTlsPort }}
          - name: http
            containerPort: {{ .Values.service.internalHttpPort }}
          readinessProbe:
            httpGet:
              scheme: HTTPS
              path: /healthz
              port: {{ .Values.service.internalTlsPort }}
          volumeMounts:
          - mountPath: /var/serving-cert
            name: serving-cert
          {{- if not .Values.keyVault.customAuth.enabled }}
          - mountPath: /etc/kubernetes/azure.json
            name: azureconf
            readOnly: true
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
      volumes:
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: {{ template "azure-key-vault-to-kubernetes.fullname" . }}
      {{- if not .Values.keyVault.customAuth.enabled }}
      - name: azureconf
        hostPath:
          path: /etc/kubernetes/azure.json
          type: File
      {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
  {{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
  {{- end }}
  {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
  {{- end }}
